{"version":3,"file":"static/js/186.4e2aa469.chunk.js","mappings":"8LA8BA,UA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC5B,OAAOJ,EAAgBI,EAAQC,QAChC,GACF,GAAE,CAACT,KAGF,gCAC2B,IAAxBG,EAAaO,SACZ,qEAEDP,EAAaQ,KAAI,SAAAC,GAAM,OACtB,4BACE,qCAAaA,EAAOC,WACpB,6BAAKD,EAAOE,QAAZ,SAFQF,EAAOG,GADK,MAQ7B,C,sLC5BKC,EAAU,gCACVC,EAAM,mCAECC,EAAiB,mCAAG,sGACRC,MAAM,GAAD,OAAIH,EAAJ,sCAAyCC,IADtC,cACzBG,EADyB,gBAETA,EAASC,OAFA,cAEzBC,EAFyB,yBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,MAAM,GAAD,OACvBH,EADuB,iCACSC,EADT,4DACgEO,IAFhE,cACtBJ,EADsB,gBAINA,EAASC,OAJH,cAItBC,EAJsB,yBAMrBA,GANqB,2CAAH,sDASdG,EAAe,mCAAG,WAAMzB,GAAN,yFACNmB,MAAM,GAAD,OACvBH,EADuB,iBACPhB,EADO,oBACYiB,EADZ,oBADC,cACvBG,EADuB,gBAKPA,EAASC,OALF,cAKvBC,EALuB,yBAOtBA,GAPsB,2CAAH,sDAUfI,EAAe,mCAAG,WAAM1B,GAAN,yFACNmB,MAAM,GAAD,OACvBH,EADuB,iBACPhB,EADO,4BACoBiB,EADpB,oBADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,sDASfhB,EAAe,mCAAG,WAAMN,GAAN,yFACNmB,MAAM,GAAD,OACvBH,EADuB,iBACPhB,EADO,4BACoBiB,EADpB,2BADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,qD,sBCtC5B,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO7B,KAAKwB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","services/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(reviews => {\n      return setMovieReviews(reviews.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length === 0 && (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n      {movieReviews.map(review => (\n        <div key={review.id}>\n          <h3>Author: {review.author}</h3>\n          <p> {review.content} </p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","const baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '532b3122039bc5d97d2bdc19adad4ecb';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(`${baseURL}trending/movie/day?api_key=${KEY}`);\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const response = await fetch(\n    `${baseURL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","reviews","results","length","map","review","author","content","id","baseURL","KEY","getTrendingMovies","fetch","response","json","promise","getSearchMovie","searchQuery","getMovieDetails","getMovieCredits","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}