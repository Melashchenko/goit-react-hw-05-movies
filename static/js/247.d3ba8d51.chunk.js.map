{"version":3,"file":"static/js/247.d3ba8d51.chunk.js","mappings":"uMAmCA,UA9Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC5B,OAAOJ,EAAaI,EAAQC,KAC7B,GACF,GAAE,CAACT,KAGF,SAAC,KAAD,UACGG,EAAUO,KAAI,WAAoCC,GAAW,IAA5CC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAC9BC,EAASH,EAAY,yCACWA,GAClCI,EAAQ,KAEZ,OACE,4BACE,gBAAKC,IAAKF,EAAQG,IAAKL,KACvB,mCAAWA,MACX,uCAAeC,OAHPH,EAMb,KAGN,C,mFC/BYQ,EAAYC,EAAAA,GAAAA,IAAH,2RAaKA,EAAAA,GAAAA,IAAH,uHASGA,EAAAA,GAAAA,GAAH,kG,sLCxBlBC,EAAU,gCACVC,EAAM,mCAECC,EAAiB,mCAAG,sGACRC,MAAM,GAAD,OAAIH,EAAJ,sCAAyCC,IADtC,cACzBG,EADyB,gBAETA,EAASC,OAFA,cAEzBC,EAFyB,yBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,MAAM,GAAD,OACvBH,EADuB,iCACSC,EADT,4DACgEO,IAFhE,cACtBJ,EADsB,gBAINA,EAASC,OAJH,cAItBC,EAJsB,yBAMrBA,GANqB,2CAAH,sDASdG,EAAe,mCAAG,WAAM9B,GAAN,yFACNwB,MAAM,GAAD,OACvBH,EADuB,iBACPrB,EADO,oBACYsB,EADZ,oBADC,cACvBG,EADuB,gBAKPA,EAASC,OALF,cAKvBC,EALuB,yBAOtBA,GAPsB,2CAAH,sDAUfrB,EAAe,mCAAG,WAAMN,GAAN,yFACNwB,MAAM,GAAD,OACvBH,EADuB,iBACPrB,EADO,4BACoBsB,EADpB,oBADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,sDASfI,EAAe,mCAAG,WAAM/B,GAAN,yFACNwB,MAAM,GAAD,OACvBH,EADuB,iBACPrB,EADO,4BACoBsB,EADpB,2BADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,qD,swTCtC5B,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlC,KAAK6B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","components/MovieList/MovieList.styled.jsx","services/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'components/MovieList/MovieList.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(credits => {\n      return setMovieCast(credits.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {movieCast.map(({ profile_path, name, character }, index) => {\n        const poster = profile_path\n          ? `https://image.tmdb.org/t/p/w342${profile_path}`\n          : require('services/no-poster.png');\n\n        return (\n          <div key={index}>\n            <img src={poster} alt={name} />\n            <h3>Name: {name}</h3>\n            <p>Character: {character}</p>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 16px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","const baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '532b3122039bc5d97d2bdc19adad4ecb';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(`${baseURL}trending/movie/day?api_key=${KEY}`);\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const response = await fetch(\n    `${baseURL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCredits","then","credits","cast","map","index","profile_path","name","character","poster","require","src","alt","Container","styled","baseURL","KEY","getTrendingMovies","fetch","response","json","promise","getSearchMovie","searchQuery","getMovieDetails","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}