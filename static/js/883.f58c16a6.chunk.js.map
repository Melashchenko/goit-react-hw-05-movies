{"version":3,"file":"static/js/883.f58c16a6.chunk.js","mappings":"mMAEaA,EAAYC,EAAAA,GAAAA,IAAH,2RAaKA,EAAAA,GAAAA,IAAH,uHASGA,EAAAA,GAAAA,GAAH,kG,4GCrBXC,GAAaD,E,OAAAA,IAAOE,EAAAA,GAAPF,CAAH,iP,SCEVG,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,oCCuDD,EA3DqB,WAAO,IAAD,IACnBE,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAASF,EAAaG,YAAb,yCACuBH,EAAaG,aAC/CC,EAAQ,MAEZC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBd,EAAOe,SAASC,MAAK,SAAAC,GACnC,OAAOR,EAAgBQ,EACxB,GACF,GAAE,CAACjB,EAAOe,UAEX,IAAQG,EAAgDV,EAAhDU,MAAOC,EAAyCX,EAAzCW,aAAcC,EAA2BZ,EAA3BY,aAAcC,EAAab,EAAba,SAE3C,OACE,iCACE,SAACzB,EAAD,CAAUC,GAAIO,EAAd,sBAEA,4BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBAAKkB,IAAKZ,EAAQa,IAAKL,OAEzB,4BACE,wBAAKA,KACL,0CAAkB,IAAIM,KAAKL,GAAcM,yBACzC,wCAAgBC,KAAKC,MAAqB,IAAfP,GAAuB,IAAlD,QACA,uCACA,6BAAKC,YAGT,4BACE,sDACA,2BACE,yBACE,SAAC,KAAD,CAAMxB,GAAG,OAAOQ,MAAOH,EAASG,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMR,GAAG,UAAUQ,MAAOH,EAASG,MAAnC,2BAKJ,SAAC,EAAAuB,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,cAMX,C,sLCjEKC,EAAU,gCACVC,EAAM,mCAECC,EAAiB,mCAAG,sGACRC,MAAM,GAAD,OAAIH,EAAJ,sCAAyCC,IADtC,cACzBG,EADyB,gBAETA,EAASC,OAFA,cAEzBC,EAFyB,yBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,MAAM,GAAD,OACvBH,EADuB,iCACSC,EADT,4DACgEO,IAFhE,cACtBJ,EADsB,gBAINA,EAASC,OAJH,cAItBC,EAJsB,yBAMrBA,GANqB,2CAAH,sDASdtB,EAAe,mCAAG,WAAMC,GAAN,yFACNkB,MAAM,GAAD,OACvBH,EADuB,iBACPf,EADO,oBACYgB,EADZ,oBADC,cACvBG,EADuB,gBAKPA,EAASC,OALF,cAKvBC,EALuB,yBAOtBA,GAPsB,2CAAH,sDAUfG,EAAe,mCAAG,WAAMxB,GAAN,yFACNkB,MAAM,GAAD,OACvBH,EADuB,iBACPf,EADO,4BACoBgB,EADpB,oBADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,sDASfI,EAAe,mCAAG,WAAMzB,GAAN,yFACNkB,MAAM,GAAD,OACvBH,EADuB,iBACPf,EADO,4BACoBgB,EADpB,2BADC,cACvBG,EADuB,gBAIPA,EAASC,OAJF,cAIvBC,EAJuB,yBAMtBA,GANsB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 16px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.object.isRequired,\n};\n","import { BackLink } from 'components/BackLink/BackLink';\nimport { Container } from 'components/MovieList/MovieList.styled';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  const poster = movieDetails.poster_path\n    ? `https://image.tmdb.org/t/p/w342${movieDetails.poster_path}`\n    : require('services/no-poster.png');\n\n  useEffect(() => {\n    getMovieDetails(params.movieId).then(details => {\n      return setMovieDetails(details);\n    });\n  }, [params.movieId]);\n\n  const { title, release_date, vote_average, overview } = movieDetails;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back to</BackLink>\n\n      <div>\n        <Container>\n          <Container>\n            <img src={poster} alt={title} />\n          </Container>\n          <div>\n            <h2>{title}</h2>\n            <p>Release date: {new Date(release_date).toLocaleDateString()}</p>\n            <p>User Score: {Math.round(vote_average * 1000) / 100}%</p>\n            <h3>Overview:</h3>\n            <p> {overview}</p>\n          </div>\n        </Container>\n        <div>\n          <h1>Additional informational</h1>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"revives\" state={location.state}>\n                Revives\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '532b3122039bc5d97d2bdc19adad4ecb';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(`${baseURL}trending/movie/day?api_key=${KEY}`);\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getSearchMovie = async searchQuery => {\n  const response = await fetch(\n    `${baseURL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${baseURL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const promise = await response.json();\n\n  return promise;\n};\n"],"names":["Container","styled","StyledLink","Link","BackLink","to","children","size","params","useParams","location","useLocation","backLinkHref","state","from","useState","movieDetails","setMovieDetails","poster","poster_path","require","useEffect","getMovieDetails","movieId","then","details","title","release_date","vote_average","overview","src","alt","Date","toLocaleDateString","Math","round","Suspense","fallback","baseURL","KEY","getTrendingMovies","fetch","response","json","promise","getSearchMovie","searchQuery","getMovieCredits","getMovieReviews"],"sourceRoot":""}